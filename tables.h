enum {
	LexEmpty, LexIdent, LexValInt, LexValReal, LexStr, LexBirth, LexDeath,
	LexDie, LexInt, LexReal, LexString, LexIter, LexIf, LexElse, LexWhile,
	LexOr, LexAnd, LexPut, LexGet, LexLB, LexRB, LexLSB, LexRSB, LexLParen,
	LexRParen, LexComma, LexColon, LexSemicolon, LexAdd, LexSub, LexMul,
	LexDiv, LexAssign, LexLT, LexLE, LexGT, LexGE, LexEq, LexNotEq, LexNeg,
	LexError
};

const char *TableOfWords[] = 
{
	"", "", "", "", "", "birth", "death", "die", "int", "real", "string",
	"iterator",	"if", "else", "while", "or", "and", "put", "get", "{", "}",
	"[", "]", "(", ")", ",", ":", ";", "+", "-", "*", "/", "=", "<", "<=",
	">", ">=", "==", "=!", "!", NULL
};

enum {
	InvalLex, BirthExpect, DeathExpect, NothingExpect, SemicolonExpect,
	IdentAfterInt, IdentAfterCommaInt, LParenInt, ValIntOrIdent, RParenInt,
	IdentAfterReal, IdentAfterCommaReal, LParenReal, ValOrIdentReal, 
	RParenReal,	IdentAfterStr, IdentAfterCommaStr, LParenStr, StrExpect, 
	RParenStr, IdentAfterIter, IdentAfterCommaIter, ValIntOrIdentArray,
	ValIntOrIdentArraySec, RSBExpect, LParenWhile, RParenWhileExp, 
	ValOrIdentWhileExp, RParenWhile, LBWhile, RBWhile, LParenGet, IdentGet,
	IdentGetComma, RParenGet, LParenPut, RParenPutExp, ValOrIdentPutExp,
	RParenPut, AssignExpect, RParenAssignExp, ValOrIdentAssignExp, LParenFor,
	ValIntOrIdentForFirst, CommaForFirst, ValIntOrIdentForSecond,
	CommaForSecond, ValIntOrIdentForThird, RParenFor, LBFor, RBFor, LParenIf,
	RParenIfExp, ValOrIdentIfExp, RParenIf, LBIfExpect, RBIfExpect,
	LBElseExpect, RBElseExpect
};

const char *TableOfErrors[] = 
{
	"",
	"\"birth\" expected in the beginning of the program",
	"\"death\" expected in the end of the program",
	"lexeme after end of the program",
	"\";\" expected in the end of statement",
	"identifier expected after \"int\"",
	"identifier expected after \",\" in description of integer",
	"\"(\" expected after identifier in description of integer",
	"identifier or int value expected after \"(\" in description of integer",
	"\")\" expected after initial value in description of integer",
	"identifier expected after \"real\"",
	"identifier expected after \",\" in description of real",
	"\"(\" expected after identifier in description of real",
	"identifier or real or int value expected after \"(\" in description of real",
	"\")\" expected after initial value in description of real",
	"identifier expected after \"string\"",
	"identifier expected after \",\" in description of string",
	"\"(\" expected after identifier in description of string",
	"string expected after \"(\" in description of string",
	"\")\" expected after initial value in description of string",
	"identifier expected after \"iterator\"",
	"identifier expected after \",\" in description of iterator",
	"identifier or int value expected after \"[\" in description of array",
	"identifier or int value expected after \",\" in description of array",
	"\"]\" expected after the dimension in the end of description of array",
	"\"(\" expected after \"while\"",
	"\")\" expected in the condition of \"while\"",
	"identifier or int or real value expected in the condition of \"while\"",
	"\")\" expected after the condition of \"while\"",
	"\"{\" expected after \")\" in the beginning of \"while\" body",
	"\"}\" expected in the end of \"while\" body",
	"\"(\" expected after \"get\"",
	"identifier expected after \"(\" as the argument of \"get\"",
	"identifier expected after \",\" as the argument of \"get\"",
	"\")\" expected after the argument of \"get\"",
	"\"(\" expected after \"put\"",
	"\")\" expected in the argument of \"put\"",
	"identifier or int or real value expected in the argument of \"put\"",
	"\")\" expected after the argument of \"put\"",
	"\"=\" expected after identifier in the assignment",
	"\")\" expected in the assignment",
	"identifier or int or real value expected in the assignment",
	"\"(\" expected after identifier in \"iter-cycle\"",
	"first identifier or int value expected after \"(\" in \"iter-cycle\"",
	"\",\" expected after the first parameter of \"iter-cycle\"",
	"second identifier or int value expected after \",\" in \"iter-cycle\"",
	"\",\" expected after the second parameter of \"iter-cycle\"",
	"third identifier or int value expected after \",\" in \"iter-cycle\"",
	"\")\" expected after the third parameter of \"iter-cycle\"",
	"\"{\" expected after \")\" in the beginning of \"iter-cycle\" body",
	"\"}\" expected in the end of \"iter-cycle\" body",
	"\"(\" expected after \"if\"",
	"\")\" expected in the condition of \"if\"",
	"identifier or int or real value expected in the condition of \"if\"",
	"\")\" expected after the condition of \"if\"",
	"\"{\" expected after \")\" in the beginning of \"if\" body",
	"\"}\" expected in the end of \"if\" body",
	"\"{\" expected after \"else\" in the beginning of \"else\" body",
	"\"}\" expected in the end of \"else\" body"
};
